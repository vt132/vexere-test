[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "vexere-microservices"
version = "0.1.0"
description = "Multi-layer architecture: LLM serving, data service, user request handling"
authors = [{name="Your Name", email="you@example.com"}]
requires-python = ">=3.10"
dependencies = [
  "fastapi",
  "uvicorn[standard]",
  "pydantic>=2.3",
  "httpx",
  "langchain-core>=0.2.0",
  "openai>=1.0.0",
  "python-dotenv",
  "spacy",
  "sentence-transformers",
  "whisper-timestamped; sys_platform != 'win32'",
  "pydub",
  "pytesseract",
  "Pillow",
  "opencv-python",
  "numpy",
  "pytest",
  "pytest-asyncio"
]

[project.optional-dependencies]
llm = ["transformers", "accelerate", "bitsandbytes"]
voice = ["openai-whisper"]
ocr = ["paddleocr"]
dev = [
  "ruff>=0.5.0",
  "black>=24.3.0",
  "isort>=5.13.0",
  "mypy>=1.8.0"
]

[tool.setuptools.packages.find]
where = ["services"]

[tool.black]
line-length = 100
target-version = ["py311"]
exclude = '(\.venv|venv|env|dist|build|__pycache__|\.mypy_cache|\.pytest_cache)'

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
strict_optional = false

[tool.ruff]
line-length = 100
target-version = "py311"
exclude = [
  ".venv",
  "venv",
  "env",
  "dist",
  "build",
  "__pycache__",
]

[tool.ruff.lint]
select = ["E", "W", "F", "I"]
ignore = []
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "preserve"
indent-style = "space"
line-ending = "auto"
